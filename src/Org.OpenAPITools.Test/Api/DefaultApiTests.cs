/*
 * Earthpoints API
 *
 * Earthpoints API description
 *
 * The version of the OpenAPI document: 0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DefaultApiTests : IDisposable
    {
        private DefaultApi instance;

        public DefaultApiTests()
        {
            instance = new DefaultApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DefaultApi
            //Assert.IsType<DefaultApi>(instance);
        }

        /// <summary>
        /// Test AppControllerCreate
        /// </summary>
        [Fact]
        public void AppControllerCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreatePointEventDto createPointEventDto = null;
            //var response = instance.AppControllerCreate(createPointEventDto);
            //Assert.IsType<CreatePointEventResponseDto>(response);
        }

        /// <summary>
        /// Test AppControllerDashboard
        /// </summary>
        [Fact]
        public void AppControllerDashboardTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AppControllerDashboard();
        }

        /// <summary>
        /// Test AppControllerFacebookConnect
        /// </summary>
        [Fact]
        public void AppControllerFacebookConnectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AppControllerFacebookConnect();
        }

        /// <summary>
        /// Test AppControllerFacebookConnectRedirect
        /// </summary>
        [Fact]
        public void AppControllerFacebookConnectRedirectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AppControllerFacebookConnectRedirect();
        }

        /// <summary>
        /// Test AppControllerFacebookLogin
        /// </summary>
        [Fact]
        public void AppControllerFacebookLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AppControllerFacebookLogin();
        }

        /// <summary>
        /// Test AppControllerFacebookLoginRedirect
        /// </summary>
        [Fact]
        public void AppControllerFacebookLoginRedirectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AppControllerFacebookLoginRedirect();
        }

        /// <summary>
        /// Test AppControllerInstagramConnect
        /// </summary>
        [Fact]
        public void AppControllerInstagramConnectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AppControllerInstagramConnect();
        }

        /// <summary>
        /// Test AppControllerInstagramConnectRedirect
        /// </summary>
        [Fact]
        public void AppControllerInstagramConnectRedirectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AppControllerInstagramConnectRedirect();
        }

        /// <summary>
        /// Test AppControllerInstagramLogin
        /// </summary>
        [Fact]
        public void AppControllerInstagramLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AppControllerInstagramLogin();
        }

        /// <summary>
        /// Test AppControllerInstagramLoginRedirect
        /// </summary>
        [Fact]
        public void AppControllerInstagramLoginRedirectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AppControllerInstagramLoginRedirect();
        }

        /// <summary>
        /// Test AppControllerLanding
        /// </summary>
        [Fact]
        public void AppControllerLandingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AppControllerLanding();
        }

        /// <summary>
        /// Test AppControllerLoginWithClientCredentials
        /// </summary>
        [Fact]
        public void AppControllerLoginWithClientCredentialsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ClientCredentialsDto clientCredentialsDto = null;
            //var response = instance.AppControllerLoginWithClientCredentials(clientCredentialsDto);
            //Assert.IsType<ClientCredentialsResponseDto>(response);
        }

        /// <summary>
        /// Test AppControllerLogout
        /// </summary>
        [Fact]
        public void AppControllerLogoutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AppControllerLogout();
        }

        /// <summary>
        /// Test AppControllerPointBadge
        /// </summary>
        [Fact]
        public void AppControllerPointBadgeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AppControllerPointBadge();
        }

        /// <summary>
        /// Test AppControllerSse
        /// </summary>
        [Fact]
        public void AppControllerSseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AppControllerSse();
        }

        /// <summary>
        /// Test AppControllerTwitterConnect
        /// </summary>
        [Fact]
        public void AppControllerTwitterConnectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AppControllerTwitterConnect();
        }

        /// <summary>
        /// Test AppControllerTwitterConnectRedirect
        /// </summary>
        [Fact]
        public void AppControllerTwitterConnectRedirectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AppControllerTwitterConnectRedirect();
        }

        /// <summary>
        /// Test AppControllerTwitterLogin
        /// </summary>
        [Fact]
        public void AppControllerTwitterLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AppControllerTwitterLogin();
        }

        /// <summary>
        /// Test AppControllerTwitterLoginRedirect
        /// </summary>
        [Fact]
        public void AppControllerTwitterLoginRedirectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AppControllerTwitterLoginRedirect();
        }

        /// <summary>
        /// Test EmailTemplateControllerCreate
        /// </summary>
        [Fact]
        public void EmailTemplateControllerCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //Object body = null;
            //instance.EmailTemplateControllerCreate(key, body);
        }

        /// <summary>
        /// Test EmailTemplateControllerFindOne
        /// </summary>
        [Fact]
        public void EmailTemplateControllerFindOneTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //instance.EmailTemplateControllerFindOne(key);
        }

        /// <summary>
        /// Test EmailTemplateControllerIndex
        /// </summary>
        [Fact]
        public void EmailTemplateControllerIndexTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.EmailTemplateControllerIndex();
        }

        /// <summary>
        /// Test EmailTemplateControllerLoginForm
        /// </summary>
        [Fact]
        public void EmailTemplateControllerLoginFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.EmailTemplateControllerLoginForm();
        }

        /// <summary>
        /// Test EmailTemplateControllerProcessLogin
        /// </summary>
        [Fact]
        public void EmailTemplateControllerProcessLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.EmailTemplateControllerProcessLogin();
        }

        /// <summary>
        /// Test PlatformConnectionControllerCreate
        /// </summary>
        [Fact]
        public void PlatformConnectionControllerCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Object body = null;
            //instance.PlatformConnectionControllerCreate(body);
        }

        /// <summary>
        /// Test PlatformConnectionControllerFindAll
        /// </summary>
        [Fact]
        public void PlatformConnectionControllerFindAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.PlatformConnectionControllerFindAll();
        }

        /// <summary>
        /// Test PlatformConnectionControllerFindOne
        /// </summary>
        [Fact]
        public void PlatformConnectionControllerFindOneTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.PlatformConnectionControllerFindOne(id);
        }

        /// <summary>
        /// Test PlatformConnectionControllerRemove
        /// </summary>
        [Fact]
        public void PlatformConnectionControllerRemoveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.PlatformConnectionControllerRemove(id);
        }

        /// <summary>
        /// Test PlatformConnectionControllerUpdate
        /// </summary>
        [Fact]
        public void PlatformConnectionControllerUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Object body = null;
            //instance.PlatformConnectionControllerUpdate(id, body);
        }

        /// <summary>
        /// Test PointEventControllerFindAll
        /// </summary>
        [Fact]
        public void PointEventControllerFindAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.PointEventControllerFindAll();
        }

        /// <summary>
        /// Test PointEventControllerFindOne
        /// </summary>
        [Fact]
        public void PointEventControllerFindOneTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.PointEventControllerFindOne(id);
        }

        /// <summary>
        /// Test PointEventControllerRemove
        /// </summary>
        [Fact]
        public void PointEventControllerRemoveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.PointEventControllerRemove(id);
        }

        /// <summary>
        /// Test PointEventControllerUpdate
        /// </summary>
        [Fact]
        public void PointEventControllerUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //UpdatePointEventDto updatePointEventDto = null;
            //instance.PointEventControllerUpdate(id, updatePointEventDto);
        }

        /// <summary>
        /// Test UserControllerCreate
        /// </summary>
        [Fact]
        public void UserControllerCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Object body = null;
            //instance.UserControllerCreate(body);
        }

        /// <summary>
        /// Test UserControllerFindOne
        /// </summary>
        [Fact]
        public void UserControllerFindOneTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.UserControllerFindOne(id);
        }

        /// <summary>
        /// Test UserControllerFindOneByEmail
        /// </summary>
        [Fact]
        public void UserControllerFindOneByEmailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string email = null;
            //instance.UserControllerFindOneByEmail(email);
        }

        /// <summary>
        /// Test UserControllerRemove
        /// </summary>
        [Fact]
        public void UserControllerRemoveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.UserControllerRemove(id);
        }

        /// <summary>
        /// Test UserControllerUpdate
        /// </summary>
        [Fact]
        public void UserControllerUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Object body = null;
            //instance.UserControllerUpdate(id, body);
        }
    }
}
